services:
  gateway-api:
    container_name: gateway-api
    build:
      context: ./src/gateway-api
    ports:
      - "8080:8080"
    restart: unless-stopped

  polls-api:
    container_name: polls-api
    build:
      context: ./src/polls-api
    ports:
      - "8081:8080" # Mapeamos a porta 8081 do PC para a 8080 do container.
    restart: unless-stopped
    environment:
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=voting_db;Username=admin;Password=supersecret
    depends_on:
      - postgres
    
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.13-management-alpine
    ports:
      - "5672:5672"
      # 15672 Ã© a porta para a interface web de gerenciamento
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    restart: unless-stopped

  postgres:
    container_name: postgres_db
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=supersecret
      - POSTGRES_DB=voting_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
  
  vote-processor:
    container_name: vote-processor
    build:
      context: ./src/vote-processor
    ports:
      - "8082:8080"
    restart: unless-stopped
    depends_on:
      - rabbitmq

  vote-persistence:
    container_name: vote-persistence
    build:
      context: ./src/vote-persistence
    restart: unless-stopped
    depends_on:
      - rabbitmq
      - postgres
    environment:
      - DATABASE_URL=postgres://admin:supersecret@postgres:5432/voting_db

  redis:
    container_name: redis_cache
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  results-api:
    container_name: results-api
    build:
      context: ./src/results-api
    ports:
      - "8083:8080"
    restart: unless-stopped
    depends_on:
      - rabbitmq
      - redis
    environment:
      - ConnectionStrings__RabbitMQ=amqp://guest:guest@rabbitmq:5672
      - ConnectionStrings__Redis=redis:6379
  
  frontend:
    container_name: frontend
    build:
      context: ./frontend
    ports:
      - "8000:80"

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    restart: unless-stopped

  grafana:
    container_name: grafana
    image: grafana/grafana-oss:latest
    ports:
      - "3000:3000"
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data: